# Generated by Django 2.1.3 on 2020-10-12 10:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('app_id', models.AutoField(primary_key=True, serialize=False)),
                ('app_date_time', models.DateTimeField(blank=True, null=True)),
                ('app_create_date', models.DateField(auto_now_add=True)),
                ('app_create_time', models.TimeField(auto_now_add=True)),
                ('app_duration', models.FloatField(max_length=100)),
                ('app_pay', models.FloatField(max_length=100)),
                ('app_success', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BannerAds',
            fields=[
                ('banner_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_path', models.FilePathField(path=None)),
            ],
        ),
        migrations.CreateModel(
            name='Bill_Details',
            fields=[
                ('bill_id', models.AutoField(primary_key=True, serialize=False)),
                ('bill_date', models.DateField(auto_now_add=True)),
                ('bill_time', models.TimeField(auto_now_add=True)),
                ('bill_amount', models.FloatField(max_length=100)),
                ('bank_transaction', models.CharField(default='', max_length=100)),
                ('bill_ticket_number', models.IntegerField()),
                ('bill_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Appointment')),
            ],
        ),
        migrations.CreateModel(
            name='Charger',
            fields=[
                ('charger_id', models.AutoField(primary_key=True, serialize=False)),
                ('charger_name', models.CharField(max_length=100)),
                ('charger_longitude', models.FloatField()),
                ('charger_latitude', models.FloatField()),
                ('charger_avaliability', models.IntegerField()),
                ('charger_capacity', models.IntegerField()),
                ('charger_rate', models.IntegerField()),
                ('charger_socket_amt', models.IntegerField(default=0)),
                ('charger_photos', models.ImageField(upload_to=None)),
                ('charger_brand_logo', models.ImageField(upload_to=None)),
                ('power_available', models.CharField(default='', max_length=100)),
                ('Other_details', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.AutoField(primary_key=True, serialize=False)),
                ('coupon_code', models.CharField(default='', max_length=50)),
                ('valid_date', models.DateTimeField()),
                ('customer_limit', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('credit_id', models.AutoField(primary_key=True, serialize=False)),
                ('credit_status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_name', models.CharField(default='', max_length=100)),
                ('credit_amt', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_email', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Not a valid email', regex='^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$')])),
                ('customer_phone', models.CharField(max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format +919999999999. Up to 10 digits allowed.', regex='^\\+?1?\\d{9,10}$')], verbose_name='Phone')),
                ('customer_address', models.CharField(max_length=100)),
                ('customer_credits', models.FloatField(max_length=200)),
                ('customer_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer_referal', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FavouriteCharger',
            fields=[
                ('favourite_ID', models.AutoField(primary_key=True, serialize=False)),
                ('favourite_charger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Charger')),
                ('favourite_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customers')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('host_id', models.AutoField(primary_key=True, serialize=False)),
                ('host_name', models.CharField(max_length=100)),
                ('host_phone', models.IntegerField()),
                ('host_address', models.CharField(max_length=100)),
                ('host_credit', models.IntegerField()),
                ('host_active', models.BooleanField(default=True)),
                ('host_referal', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneOTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format +919999999999. Up to 14 digits allowed.', regex='^\\+?1?\\d{9,10}$')])),
                ('otp', models.CharField(blank=True, max_length=9, null=True)),
                ('count', models.IntegerField(default=0, help_text='Number of otp_sent')),
                ('validated', models.BooleanField(default=False, help_text='If it is true, that means user have validate otp correctly in second API')),
                ('otp_session_id', models.CharField(default='', max_length=120, null=True)),
                ('username', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('email', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('password', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_photo', models.ImageField(upload_to=None)),
                ('Charger_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Charger')),
            ],
        ),
        migrations.CreateModel(
            name='Socket',
            fields=[
                ('socket_id', models.AutoField(primary_key=True, serialize=False)),
                ('socket_name', models.CharField(default='', max_length=100)),
                ('socket_image', models.ImageField(upload_to=None)),
            ],
        ),
        migrations.CreateModel(
            name='SubAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subadmin_email', models.CharField(max_length=100)),
                ('subadmin_active', models.FloatField()),
                ('subadmin', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubAdminAccess',
            fields=[
                ('access_id', models.AutoField(primary_key=True, serialize=False)),
                ('edit_user', models.BooleanField(default=False)),
                ('edit_host', models.BooleanField(default=False)),
                ('edit_billdetails', models.BooleanField(default=False)),
                ('edit_pumpdetails', models.BooleanField(default=False)),
                ('edit_appointments', models.BooleanField(default=False)),
                ('access_subadmin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.SubAdmin')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('subscription_id', models.AutoField(primary_key=True, serialize=False)),
                ('subscription_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customers')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('s_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_type', models.CharField(max_length=100)),
                ('s_title', models.CharField(max_length=100)),
                ('s_description', models.CharField(max_length=100)),
                ('s_price_pm', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('vehicle_number', models.CharField(max_length=100)),
                ('vehicle_type', models.CharField(max_length=100)),
                ('is_favourite', models.BooleanField(default=True)),
                ('vehicle_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customers')),
            ],
        ),
        migrations.AddField(
            model_name='subscription',
            name='subscription_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.SubscriptionType'),
        ),
        migrations.AddField(
            model_name='credit',
            name='credit_customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customers'),
        ),
        migrations.AddField(
            model_name='credit',
            name='credit_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.CreditType'),
        ),
        migrations.AddField(
            model_name='charger',
            name='charger_host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Host'),
        ),
        migrations.AddField(
            model_name='charger',
            name='charger_socket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Socket'),
        ),
        migrations.AddField(
            model_name='bill_details',
            name='coupon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Coupon'),
        ),
        migrations.AddField(
            model_name='bannerads',
            name='banner_subadmin_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.SubAdmin'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='app_charger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Charger'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='app_customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customers'),
        ),
    ]
